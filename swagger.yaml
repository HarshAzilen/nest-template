openapi: 3.0.0
paths:
  /health-check:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
  /event/sse:
    get:
      operationId: ServerSentEventController_sse
      parameters: []
      responses:
        '200':
          description: ''
  /user/venue-operator:
    post:
      operationId: UserController_signUp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
  /user/sign-in:
    post:
      operationId: UserController_signIn
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
  /user/verify-otp:
    post:
      operationId: UserController_verifyOtp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtpRequestDto'
      responses:
        '201':
          description: ''
  /user/reset-password:
    put:
      operationId: UserController_resetPassword
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordDto'
      responses:
        '200':
          description: ''
  /user/send-otp/{email}:
    get:
      operationId: UserController_emailSend
      parameters:
        - name: email
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /user/search/{email}:
    get:
      operationId: UserController_search
      parameters:
        - name: email
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /user/verify-operator/{email}:
    get:
      operationId: UserController_verifyOperator
      parameters:
        - name: email
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /venue:
    post:
      operationId: VenueController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVenueDto'
      responses:
        '201':
          description: ''
    get:
      operationId: VenueController_findAll
      parameters: []
      responses:
        '200':
          description: ''
  /venue/{id}:
    get:
      operationId: VenueController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    patch:
      operationId: VenueController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVenueDto'
      responses:
        '200':
          description: ''
    delete:
      operationId: VenueController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /social-media:
    post:
      operationId: SocialMediaController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSocialMediaDto'
      responses:
        '201':
          description: ''
  /location:
    post:
      operationId: LocationController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationDto'
      responses:
        '200':
          description: ''
  /location/venue/{venueOperatorId}:
    get:
      operationId: LocationController_get
      parameters:
        - name: venueOperatorId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /location/{id}:
    get:
      operationId: LocationController_getById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
info:
  title: API
  description: API docs
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    JWT:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreateUserDto:
      type: object
      properties: {}
    OtpRequestDto:
      type: object
      properties: {}
    ResetPasswordDto:
      type: object
      properties: {}
    CreateVenueDto:
      type: object
      properties: {}
    UpdateVenueDto:
      type: object
      properties: {}
    CreateSocialMediaDto:
      type: object
      properties: {}
    LocationDto:
      type: object
      properties: {}
